<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.hbpu.animation.mapper.NewsMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.hbpu.animation.pojo.News" >
    <id column="newsId" property="newsid" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="readNum" property="readnum" jdbcType="INTEGER" />
    <result column="newsFrom" property="newsfrom" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="isDel" property="isdel" jdbcType="INTEGER" />
    <result column="isBroadcast" property="isbroadcast" jdbcType="INTEGER" />
    <result column="isWeek" property="isweek" jdbcType="INTEGER" />
    <result column="isHot" property="ishot" jdbcType="INTEGER" />
    <result column="pictures" property="pictures" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    newsId, tid, title, author, date, readNum, newsFrom, content, isDel, isBroadcast, 
    isWeek, isHot, pictures
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.hbpu.animation.pojo.NewsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from news
    where newsId = #{newsid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from news
    where newsId = #{newsid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.hbpu.animation.pojo.NewsExample" >
    delete from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.hbpu.animation.pojo.News" >
    insert into news (newsId, tid, title, 
      author, date, readNum, 
      newsFrom, content, isDel, 
      isBroadcast, isWeek, isHot, 
      pictures)
    values (#{newsid,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{readnum,jdbcType=INTEGER}, 
      #{newsfrom,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{isdel,jdbcType=INTEGER}, 
      #{isbroadcast,jdbcType=INTEGER}, #{isweek,jdbcType=INTEGER}, #{ishot,jdbcType=INTEGER}, 
      #{pictures,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.hbpu.animation.pojo.News" >
    insert into news
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        newsId,
      </if>
      <if test="tid != null" >
        tid,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="readnum != null" >
        readNum,
      </if>
      <if test="newsfrom != null" >
        newsFrom,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="isdel != null" >
        isDel,
      </if>
      <if test="isbroadcast != null" >
        isBroadcast,
      </if>
      <if test="isweek != null" >
        isWeek,
      </if>
      <if test="ishot != null" >
        isHot,
      </if>
      <if test="pictures != null" >
        pictures,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="newsid != null" >
        #{newsid,jdbcType=INTEGER},
      </if>
      <if test="tid != null" >
        #{tid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="readnum != null" >
        #{readnum,jdbcType=INTEGER},
      </if>
      <if test="newsfrom != null" >
        #{newsfrom,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="isbroadcast != null" >
        #{isbroadcast,jdbcType=INTEGER},
      </if>
      <if test="isweek != null" >
        #{isweek,jdbcType=INTEGER},
      </if>
      <if test="ishot != null" >
        #{ishot,jdbcType=INTEGER},
      </if>
      <if test="pictures != null" >
        #{pictures,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.hbpu.animation.pojo.NewsExample" resultType="java.lang.Integer" >
    select count(*) from news
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update news
    <set >
      <if test="record.newsid != null" >
        newsId = #{record.newsid,jdbcType=INTEGER},
      </if>
      <if test="record.tid != null" >
        tid = #{record.tid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readnum != null" >
        readNum = #{record.readnum,jdbcType=INTEGER},
      </if>
      <if test="record.newsfrom != null" >
        newsFrom = #{record.newsfrom,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.isdel != null" >
        isDel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.isbroadcast != null" >
        isBroadcast = #{record.isbroadcast,jdbcType=INTEGER},
      </if>
      <if test="record.isweek != null" >
        isWeek = #{record.isweek,jdbcType=INTEGER},
      </if>
      <if test="record.ishot != null" >
        isHot = #{record.ishot,jdbcType=INTEGER},
      </if>
      <if test="record.pictures != null" >
        pictures = #{record.pictures,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update news
    set newsId = #{record.newsid,jdbcType=INTEGER},
      tid = #{record.tid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=TIMESTAMP},
      readNum = #{record.readnum,jdbcType=INTEGER},
      newsFrom = #{record.newsfrom,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      isDel = #{record.isdel,jdbcType=INTEGER},
      isBroadcast = #{record.isbroadcast,jdbcType=INTEGER},
      isWeek = #{record.isweek,jdbcType=INTEGER},
      isHot = #{record.ishot,jdbcType=INTEGER},
      pictures = #{record.pictures,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.hbpu.animation.pojo.News" >
    update news
    <set >
      <if test="tid != null" >
        tid = #{tid,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="readnum != null" >
        readNum = #{readnum,jdbcType=INTEGER},
      </if>
      <if test="newsfrom != null" >
        newsFrom = #{newsfrom,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isdel != null" >
        isDel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="isbroadcast != null" >
        isBroadcast = #{isbroadcast,jdbcType=INTEGER},
      </if>
      <if test="isweek != null" >
        isWeek = #{isweek,jdbcType=INTEGER},
      </if>
      <if test="ishot != null" >
        isHot = #{ishot,jdbcType=INTEGER},
      </if>
      <if test="pictures != null" >
        pictures = #{pictures,jdbcType=VARCHAR},
      </if>
    </set>
    where newsId = #{newsid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.hbpu.animation.pojo.News" >
    update news
    set tid = #{tid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      readNum = #{readnum,jdbcType=INTEGER},
      newsFrom = #{newsfrom,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      isDel = #{isdel,jdbcType=INTEGER},
      isBroadcast = #{isbroadcast,jdbcType=INTEGER},
      isWeek = #{isweek,jdbcType=INTEGER},
      isHot = #{ishot,jdbcType=INTEGER},
      pictures = #{pictures,jdbcType=VARCHAR}
    where newsId = #{newsid,jdbcType=INTEGER}
  </update>
  <update id="batchDelete" parameterType="java.util.Arrays">
        update news set isDel=1 where newsId in
        <foreach collection="array" open="(" item="newsId" separator="," close=")">
            #{newsId} 
        </foreach>
   </update>
  
  <resultMap id="NewsPojoMap" type="cn.edu.hbpu.animation.pojo.NewsPojo" >
    <id column="newsId" property="newsid" jdbcType="INTEGER" />
    <result column="tid" property="tid" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="readNum" property="readnum" jdbcType="INTEGER" />
    <result column="newsFrom" property="newsfrom" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="isDel" property="isdel" jdbcType="INTEGER" />
    <result column="isBroadcast" property="isbroadcast" jdbcType="INTEGER" />
    <result column="isWeek" property="isweek" jdbcType="INTEGER" />
    <result column="isHot" property="ishot" jdbcType="INTEGER" />
    <result column="pictures" property="pictures" jdbcType="VARCHAR" />
    <result column="tname" property="tname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <select id="selectTagnameAndTnameByExample" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.name, type.tname from news n left join newsmaptags nt on 
  n.newsId=nt.newsId left join tags t on nt.tagId = t.tagId left join type on n.tid=type.tid where n.isDel=0
  </select>
  <select id="selectTagnameAndAndTitleByTname" resultMap="NewsPojoMap" parameterType="java.lang.String" >
  select  n.*, t.name, type.tname from news n left join newsmaptags nt on 
  n.newsId=nt.newsId left join tags t on nt.tagId = t.tagId left join type on n.tid=type.tid where n.isDel=0 and n.title LIKE CONCAT(CONCAT('%', #{n.title}), '%');
  </select>
  <select id="selectTnameByBroadcast" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.tname from news n left join type t on n.tid=t.tid where n.isDel=0 and n.isBroadcast=1
  </select>
  <select id="selectTnameByWeek" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.tname from news n left join type t on n.tid=t.tid where n.isDel=0 and n.isWeek=1
  </select>
  <select id="selectTnameByHot" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.tname from news n left join type t on n.tid=t.tid where n.isDel=0 and n.isHot=1
  </select>
  <select id="selectTnameByRead" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.tname from news n left join type t on n.tid=t.tid where n.isDel=0 order by readNum desc 
  </select>
  <select id="selectTnameByTime" resultMap="NewsPojoMap" parameterType="cn.edu.hbpu.animation.pojo.NewsPojo" >
  select  n.*, t.tname from news n left join type t on n.tid=t.tid where n.isDel=0 order by date desc 
  </select>
</mapper>